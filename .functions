#!/bin/bash
git() {
	if [[ "$1" == "add" ]] &&
	   [[ "$2" == "-p" ]] || [[ "$2" == "--patch" ]]
	then
		tabs -c3
		if [[ "$#" -eq 2 ]]
		then
			command git add -p
		else
			command git add -p "$3"
		fi
		tabs -4
		#echo sukses
	else
		command git "$@"
	fi
}

rmd()
{
	pandoc $1 | lynx -stdin
}

dsize()
{
	echo "du -ah --max-depth=1 | sort -hr"
	du -ah --max-depth=1 | sort -hr
}

to()
{
	cd "$1"
	ls
}

gcheck()
{
	inen "$(enin "$1")"
}

mkcd()
{
	mkdir $1
	cd $1
}

cpcontent()
{
	echo "xsel -b < $1"
	xsel -b < $1
}

# Source: https://stackoverflow.com/a/638980/9157799
checkfile()
{
	if [ -f $1 ]
	then
		echo $1 found
	else
		echo $1 not found
	fi
}

# Source: https://stackoverflow.com/a/59839/9157799
checkdir()
{
	if [ -d $1 ]
	then
		echo $1 found
	else
		echo $1 not found
	fi
}

run()
{
	if [ ! -d Classes ] && [ ${1: -5} = ".java" ]
	then
		mkdir Classes
		echo "mkdir Classes"
	fi

	# if there is 1 argument and the last 5 char of it is ".java"
	# Source: https://stackoverflow.com/a/19858692/9157799
	if [ ${1: -5} = ".java" ]
	then
		# Source: https://stackoverflow.com/questions/27658675/how-to-remove-last-n-characters-from-a-string-in-bash#comment71002787_27658733
		1=${1:0:-5}
		if [ $# -eq 2 ] # Source: https://stackoverflow.com/a/6482403/9157799
		then
			echo "javac -d Classes -cp \".:Jars/*:Packages:$2\" $1.java && java -cp \"Classes:$2\" $1\nOutput:"
			javac -d Classes -cp ".:Jars/*:Packages:$2" $1.java && java -cp "Classes:$2" $1
		else
			echo "javac -d Classes -cp \".:Jars/*:Packages\" $1.java && java -cp \"Classes\" $1\nOutput:"
			javac -d Classes -cp ".:Jars/*:Packages" $1.java && java -cp "Classes" $1
		fi
	elif [ ${1: -4} = ".cpp" ]
	then
		executableName=${1:0:-4} # Jika arg pertama "Main.cpp", maka executableName -> "Main"
		echo "g++ -g -o $executableName $@ && ./$executableName\nOutput:"
		g++ -g -o $executableName $@ && ./$executableName
		return
	fi
}

runo()
{
	if [ ! -d Classes ]
	then
		mkdir Classes
		echo "mkdir Classes"
	fi

	# Source: https://stackoverflow.com/a/19858692/9157799
	if [ ${1: -5} = ".java" ]
	then
		# Source: https://stackoverflow.com/questions/27658675/how-to-remove-last-n-characters-from-a-string-in-bash#comment71002787_27658733
		1=${1:0:-5}
	fi

	if [ $# -eq 2 ] # Source: https://stackoverflow.com/a/6482403/9157799
	then
		echo "javac -d Classes -cp \".:Jars/*:Packages:$2\" $1.java && java -cp \"Classes:$2\" $1 > output.txt"
		javac -d Classes -cp ".:Jars/*:Packages:$2" $1.java && java -cp "Classes:$2" $1 > output.txt
	else
		echo "javac -d Classes -cp \".:Jars/*:Packages\" $1.java && java -cp \"Classes\" $1 > output.txt"
		javac -d Classes -cp ".:Jars/*:Packages" $1.java && java -cp "Classes" $1 > output.txt
	fi
}

# compile package
cpac()
{
	if [ $1 = "" ]
	then
		echo "Please specify the source files location"
	else
		if [ ! -d Classes ]
		then
			dqt='"'
			mkdir Classes
			echo "${dqt}Classes${dqt} directory created"
		fi

		if [ $# -eq 1 ]
		then
			javac -d Classes $(find $1 -name '*.java')
		else
			javac -d Classes -cp $2 $(find $1 -name '*.java')
		fi
	fi
}

# ! Use quotation mark if you use more than 1 word
#	findfile 'ompetiti*gram'
findfile()
{
	echo "find . -name \"*$1*\""
	find . -name "*$1*"
}

findinfiles()
{
	if [ $# -gt 1 ]
	then
		echo "Put multiple words in double quotes!"
	else
		echo "grep -iRI \"$@\""
		grep -iRI "$@"
	fi
}

copy()
{
	if [ $1 = "" ]
	then
		pwd | xclip
	else
		# Source: https://stackoverflow.com/a/5265775/9157799
		readlink -f $1 | xclip
	fi
}

paste()
{
	pathToCopy=$(xclip -o)

	if [ -d $pathToCopy ] # If it's a directory
	then
		cp -r $pathToCopy .
	else
		cp $pathToCopy .
	fi
}

watchgdb()
{
	#echo '' > gdb.out
	cat /dev/null > gdb.out
	echo "tail -f gdb.out"
	tail -f gdb.out
}

cpdiff()
{
	if [ $# -ne 2 ]
	then
		echo -e "usage: cpdiff [file1] [file2]"
		return
	fi

	nl $1 > deletethis
	nl $2 > deletethistoo
	gdcol --no-index deletethis deletethistoo
	rm deletethis deletethistoo
}

# Source: https://stackoverflow.com/a/11145362/9157799
replaceline()
{
	if [ $# -ne 3 ]
	then
		echo -e "usage: replaceline [line number] [new string] [file]"
		return
	fi

	sed -i "$1s/.*/$2/" $3
}

# Source: https://stackoverflow.com/a/20026432/9157799
getlinenumber()
{
	if [ $# -ne 2 ]
	then
		echo -e "usage: getlinenumber [substring] [file]"
		return
	fi

	awk "/$1/{print NR; exit}" $2
}

# Source: https://stackoverflow.com/q/21600584/9157799
deletelinenumber()
{
	if [ $# -ne 2 ]
	then
		echo -e "usage: deletelinenumber [line number] [file]"
		return
	fi

	sed -i $1d $2
}

# Source: https://stackoverflow.com/a/27056916/9157799
getline()
{
	if [ $# -ne 2 ]
	then
		echo -e "usage: getline [line number] [file]"
		return
	fi

	echo $(awk -v line=$1 'NR==line' $2)
}

# Source: https://stackoverflow.com/a/17794626/9157799
removelastline()
{
	if [ $# -ne 1 ]
	then
		echo -e "usage: removelastline [file]"
		return
	fi

	# Don't split the below code into multiple lines
	dd if=/dev/null of=$1 bs=1 seek=$(echo $(stat --format=%s $1) - $(tail -n1 $1 | wc -c) | bc) status=none
}

# Source: https://superuser.com/a/246841/943615
insertlinetotop()
{
	if [ $# -ne 2 ]
	then
		echo -e "usage: insertlinetotop [string] [file]"
		return
	fi

	echo $1 | cat - $2 > temp && mv temp $2
}

# Source: https://stackoverflow.com/a/12022403/9157799
numberofline()
{
	if [ $# -ne 1 ]
	then
		echo -e "usage: numberofline [file]"
		return
	fi

	wc -l < $1
}

# view GitHub repo of current directory
# Source: https://gist.github.com/igrigorik/6666860#gistcomment-2888787
gh()
{
	xdg-open https://github.$(git config remote.origin.url | cut -f2 -d.)
}

# Source: https://unix.stackexchange.com/a/207214/307359
# Source: https://askubuntu.com/a/596827/356625
getdir()
{
	echo $(dirs -c; dirs | sed 's/ /\\ /g')
}
